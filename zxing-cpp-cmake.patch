--- zxing-cpp-e0e40ddec63f38405aca5c8c1ff60b85ec8b1f10/CMakeLists.txt.orig	2019-03-20 14:52:05.000000000 +0100
+++ zxing-cpp-e0e40ddec63f38405aca5c8c1ff60b85ec8b1f10/CMakeLists.txt	2021-06-19 09:59:00.886700396 +0200
@@ -44,21 +44,9 @@
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
 endif()
 
-# OpenCV classes
-find_package(OpenCV)
-if(OpenCV_FOUND)
-    list(APPEND LIBZXING_FILES
-        opencv/src/zxing/MatSource.cpp
-        opencv/src/zxing/MatSource.h
-    )
-
-    include_directories(${OpenCV_INCLUDE_DIRS})
-    include_directories(opencv/src)
-endif()
-
 include_directories(core/src)
 add_library(libzxing ${LIBZXING_FILES})
-set_target_properties(libzxing PROPERTIES PREFIX "")
+set_target_properties(libzxing PROPERTIES PREFIX "" SOVERSION 0)
 
 find_package(Iconv)
 if(ICONV_FOUND)
@@ -68,14 +56,32 @@
     add_definitions(-DNO_ICONV=1)
 endif()
 
-# Add OpenCV cli executable
+# OpenCV classes
+find_package(OpenCV)
 if(OpenCV_FOUND)
+    file(GLOB_RECURSE LIBZXING_OPENCV_FILES
+        "./opencv/src/*.cpp"
+        "./opencv/src/*.h"
+    )
+    include_directories(${OpenCV_INCLUDE_DIRS})
+    include_directories("./opencv/src/")
+    add_library(libzxing-cv ${LIBZXING_OPENCV_FILES})
+    set_target_properties(libzxing-cv PROPERTIES PREFIX "" SOVERSION 0)
+    set(LIBZXING_FILES ${LIBZXING_FILES} ${LIBZXING_OPENCV_FILES})
+    target_link_libraries(libzxing-cv libzxing ${OpenCV_LIBRARIES})
+
+    # Add OpenCV cli executable
     file(GLOB_RECURSE OPENCV_ZXING_FILES
         "./opencv-cli/src/*.cpp"
         "./opencv-cli/src/*.h"
     )
     add_executable(zxing-cv ${OPENCV_ZXING_FILES})
-    target_link_libraries(zxing-cv libzxing ${OpenCV_LIBRARIES})
+    target_link_libraries(zxing-cv libzxing-cv libzxing ${OpenCV_LIBRARIES})
+
+    install(TARGETS libzxing-cv zxing-cv
+	LIBRARY DESTINATION lib${LIB_SUFFIX}
+	RUNTIME DESTINATION bin
+	ARCHIVE DESTINATION lib${LIB_SUFFIX})
 endif()
 
 # Add cli executable.
@@ -88,9 +94,9 @@
 target_link_libraries(zxing libzxing)
 
 install(TARGETS zxing libzxing EXPORT zxing-targets
-	LIBRARY DESTINATION lib
+	LIBRARY DESTINATION lib${LIB_SUFFIX}
 	RUNTIME DESTINATION bin
-	ARCHIVE DESTINATION lib
+	ARCHIVE DESTINATION lib${LIB_SUFFIX}
     INCLUDES DESTINATION include
 )
 
